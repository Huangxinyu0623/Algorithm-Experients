import java.util.*;

public class KnapsackGreedy {
	private static Scanner s;

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		s = new Scanner(System.in);
		int c = s.nextInt();// 背包容量
		int n = s.nextInt();// 物品种类
		things[] t = new things[n];
		for (int i = 0; i < n; i++) {
			t[i]=new things();
			//内部类是动态的，也就是开头以public class开头。而主程序是public static class main。
			//在Java中，类中的静态方法不能直接调用动态方法。
			//只有将某个内部类修饰为静态类，然后才能够在静态类中调用该类的成员变量与成员方法。
			//所以在不做其他变动的情况下，最简单的解决办法是将public class改为public static class
			t[i].value = Math.random() * 100;
			t[i].weight =Math.random() * 10%c;
			t[i].valuep = t[i].value / t[i].weight;

		}
		long start=System.nanoTime();
		for (int i = 1; i < n; i++) {
			double temp = t[i].valuep;
			int j = i;
			while (j > 0 && t[j - 1].valuep > temp) {
				t[j].valuep = t[j - 1].valuep;
				t[j].value = t[j - 1].value;
				t[j].weight = t[j - 1].weight;
				j--;
			}
			t[j].valuep = temp;
			double temp1 = t[i].weight;
			t[i].weight = t[j].weight;
			t[j].weight = temp1;
			double temp2=t[i].value;
			t[i].value = t[j].value;
			t[j].value = temp2;
		}
		double total=0;
		int k=n-1;
		while(c>0&&k>=0) {
			if(c>=t[k].weight) {
				total+=t[k].value;
				c-=t[k].weight;
				k--;
			}else if(c<t[k].weight){//背包容量装不下
				total+=t[k].valuep*c;
				c=0;
			}
		}
		long end=System.nanoTime();
		System.out.println("运行时间为"+(end-start)/1000000.0+"ms");
		//System.out.println("总价值为"+total);
	}

	public static class things {
		double value;
		double weight;
		double valuep;
		
	}

}
